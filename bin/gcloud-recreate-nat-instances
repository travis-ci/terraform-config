#!/usr/bin/env ruby
require 'optparse'
require 'json'

def main
  options = { env: '', noop: false }
  OptionParser.new do |opts|
    opts.banner = <<-HEREDOC

  Recreates the NAT instances managed by the instance groups specified using the GCE_NAT_GROUPS environment variable.
  Also requires GCE_NAT_PROJECT and GCE_NAT_REGION to be set.
  
  Usage: gcloud-recreate-nat-instances [options]

  HEREDOC
    opts.on('-E', '--env=ENV_FILE') do |f|
      options[:env] = f.strip
    end

    opts.on('-n', '--noop') do
      options[:noop] = true
    end

    opts.on('--help') do
      puts opts
      exit
    end
  end.parse!

  env = Hash[ENV]
  env.merge!(source_env(options[:env])) unless options[:env].empty?

  project = env.fetch('GCE_NAT_PROJECT')
  region = env.fetch('GCE_NAT_REGION')
  groups = env.fetch('GCE_NAT_GROUPS').split(',').map(&:strip)

  groups_zones = groups.map do |group|
    [group, "#{region}-#{group.split('-').fetch(1)}"]
  end
  groups_zones = Hash[groups_zones]

  groups_zones.each do |instance_group, zone|
    instance_list = JSON.parse(`gcloud compute instance-groups list-instances #{instance_group} --zone=#{zone} --project=#{project} --format=json`)
    instances = instance_list.map{|x| x['instance'].split('/').last}
    command = %W[
      gcloud compute instance-groups managed recreate-instances
      #{instance_group} --zone=#{zone} --project=#{project}
      --instances=#{instances.join(',')}
    ]
    run_command(command, options.fetch(:noop))
  end

  0
end

def run_command(command, noop)
  if noop
    puts "---> NOOP: #{command.join(' ').inspect}"
  else
    puts "---> RUNNING: #{command.join(' ').inspect}"
    system(*command)
  end
end

def source_env(env_file)
  base_env = `bash -c 'printenv'`.split($/).map do |l|
    l.strip.split('=', 2)
  end
  base_env = Hash[base_env]
  sourced_env = `bash -c "source #{env_file}; printenv"`.split($/).map do |l|
    l.strip.split('=', 2)
  end
  sourced_env = Hash[sourced_env]
  base_env.keys.each { |k| sourced_env.delete(k) }
  sourced_env
end

exit(main) if $PROGRAM_NAME == __FILE__
